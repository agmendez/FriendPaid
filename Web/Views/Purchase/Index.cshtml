@using FluentValidation.Results
@model friendpaid_web.ViewModels.RegistrarCompraViewModel


<div class="page-header" style="padding-top: 100px">
    <h1>RegistrarCompra</h1>
</div>

@if(@Model.errores!=null)
{
    <div class="alert alert-block alert-error fade in">
    @foreach (ValidationFailure @error in @Model.errores)
    {
        <p>@error.ErrorMessage</p>
    }
    </div>
}

<div class="row-fluid metro">
    <div class="span2 offset5">
        @using (Html.BeginForm("RegistrarCompra", "Home", FormMethod.Post))
        {
            @Html.HiddenFor(model => model.nombreDeComprador)
            <div class="control-group">
                <label class="control-label">Descripcion</label>
                <div class="controls">
                    @Html.EditorFor(model => model.descripcion)
                </div>
            </div>
            <div class="control-group">
                <label class="control-label">Monto</label>
                <div class="controls">
                    @Html.EditorFor(model => model.montoTotal)
                </div>    
            </div>
            <div class="control-group">
                <label class="control-label">NombreDeGrupo</label>
                <div class="controls">
                    @Html.TextBoxFor(model => model.nombreDeGrupo, new { @id = "nombreDeGrupoContainer",@autocomplete ="off" })
                </div>
            </div>
            <button class="btn" type="submit">RegistrarCompra</button>
        }  
    </div>
</div>
